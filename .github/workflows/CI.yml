name: Lint & Build

on:
  push:
    branches:
      - master
  pull_request:


jobs:
  lint_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '14'

      - name: Node modules cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys:
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


      - name: Install packages
        run: npm install


      - name: Build code
        working-directory: 'src'
        run: npm run build
  
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and push image
        run: |
          docker build -t iris-front_image .
          docker tag iris-front_image ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com/iris-front_image:latest
          $(aws ecr get-login --no-include-email --region REGION)
          docker push ACCOUNT_ID.dkr.ecr.REGION
          docker run -p 8080:8080 iris-front_image 